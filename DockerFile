FROM golang:1.19 as builder

# Create and change to the app directory.
WORKDIR /app

# Copy local code to the container image.
COPY ./*.go ./
COPY ./go.* ./
COPY vendor ./vendor

# Build the binary.
#RUN CGO_ENABLED=0 GOOS=linux go build -mod=vendor -v -o server
RUN go mod download
RUN go build -mod=readonly -v -o server

# Use the official Alpine image for a lean production container.
# https://hub.docker.com/_/alpine
# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds
FROM alpine:3
RUN apk add --no-cache ca-certificates

# Copy the binary to the production image from the builder stage.
COPY --from=builder /app/server /server

# Run the web service on container startup.
EXPOSE 5000
CMD ["./server"]
